<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://unpkg.com/i18next/dist/umd/i18next.min.js"></script>
    <script src="https://unpkg.com/i18next-http-backend/i18nextHttpBackend.min.js"></script>
    <script src="https://unpkg.com/i18next-browser-languagedetector/i18nextBrowserLanguageDetector.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TorgetKat</title>
    <style>           
        h1 {
            text-align: center;
            margin-bottom: 20px;
        }

        .productsContainer {
            margin-top: -27px;
            padding: 20px;
            flex: 1;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Responsive grid */
        }

        .product {
            font-family: Arial, Helvetica, sans-serifx;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin: 10px 0;
            background-color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .product:hover {
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        .product img {
            max-width: 300px;
            height: auto;
            border-radius: 5px;
        }

        .product h3 {
            margin: 0;
        }

        .no-products {
            text-align: center;
            font-size: 18px;
            margin-top: 20px;
        }

        .filter-container {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
            font-family: 'Arial', sans-serif;
        }

        .filter-container label {
            font-size: 13px;
            color: #333;
            font-weight: bold;
        }

        #priceFilter, #dateFilter, #subCategoryFilter {
            padding: 7px;
            font-size: 13px;
            border-radius: 4px;
            background-color: #f9f9f9;
            transition: background-color 0.3s ease, border-color 0.3s ease;
            cursor: pointer;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .page-container {
            display: flex;
            gap: 20px;
            padding: 20px;
        }

        .side-panel {
            font-family: Arial, Helvetica, sans-serif;
            width: 250px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            flex-shrink: 0;
        }

        .side-panel h3 {
            margin-bottom: 15px;
            font-size: 18px;
            color: #333;
            text-align: center;
        }

        .country-list, .car-brand-list {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .country-list li, .car-brand-list li {
            margin-bottom: 10px;
            display: flex;
            align-items: center;
        }

        .country-list input[type="checkbox"], .car-brand-list input[type="checkbox"] {
            margin-right: 10px;
            cursor: pointer;
        }

        .country-list label, .car-brand-list label {
            font-size: 16px;
            color: #555;
            cursor: pointer;
        }

        .country-list label:hover, .car-brand-list label:hover {
            color: #007bff;
        }

        .sold-label {
            color: #ffffff;
            background-color: #ff5722;
            padding: 3px 6px;
            border-radius: 4px;
            font-size: 14px;
            font-weight: bold;
            margin-left: 5px;
            display: inline-block;
        }

        
    </style>
</head>
<body>
    <%- include('partials/navbar') %>
    <script src="/shared.js"></script>

    <div class="filter-container" style="margin-bottom: 20px;">
        <label for="priceFilter" data-i18n="filter.sorter_etter">Sorter etter:</label>
        <select id="priceFilter" onchange="applyFilters()">
            <option value="asc" data-i18n="filter.lavest_pris">Lavest Pris</option>
            <option value="desc" data-i18n="filter.høyest_pris">Høyest Pris</option>
        </select>
        <label for="dateFilter" data-i18n="filter.utgitt">Utgitt:</label>
        <select id="dateFilter" onchange="applyFilters()">
            <option value="" data-i18n="filter.alle">alle</option>
            <option value="desc" data-i18n="filter.nylige">Nylige</option>
            <option value="asc" data-i18n="filter.eldre">Eldre</option>
        </select>
        <div id="subcategoryFilterContainer" style="display: none;">
            <label for="subCategoryFilter" data-i18n="form.category">Kategori:</label>
            <select id="subCategoryFilter" onchange="applyFilters()">
                <option value="" data-i18n="filter.alle">Alle</option>
                <option value="Klær" data-i18n="subkategori.klær">Klær</option>
                <option value="Elektronikk" data-i18n="subkategori.elektronikk">Elektronikk</option>
                <option value="Hvitvarer" data-i18n="subkategori.hvitvarer">Hvitvarer</option>
                <option value="Møbler" data-i18n="subkategori.møbler">Møbler</option>
                <option value="Annet" data-i18n="subkategori.annet">Annet</option>
            </select>
        </div> 
    </div>  

    <div class="page-container">
        <div class="side-panel">
            <h3 data-i18n="filter.filter_land">Filter by Country</h3>
            <ul class="country-list">
                <li><input type="checkbox" id="uae" value="UAE"> <label for="uae">United Arab Emirates</label></li>
                <li><input type="checkbox" id="saudi" value="Saudi Arabia"> <label for="saudi">Saudi Arabia</label></li>
                <li><input type="checkbox" id="egypt" value="Egypt"> <label for="egypt">Egypt</label></li>
                <li><input type="checkbox" id="jordan" value="Jordan"> <label for="jordan">Jordan</label></li>
                <li><input type="checkbox" id="qatar" value="Qatar"> <label for="qatar">Qatar</label></li>
                <li><input type="checkbox" id="oman" value="Oman"> <label for="oman">Oman</label></li>
                <li><input type="checkbox" id="kuwait" value="Kuwait"> <label for="kuwait">Kuwait</label></li>
                <li><input type="checkbox" id="bahrain" value="Bahrain"> <label for="bahrain">Bahrain</label></li>
                <li><input type="checkbox" id="iraq" value="Iraq"> <label for="iraq">Iraq</label></li>
                <li><input type="checkbox" id="syria" value="Syria"> <label for="syria">Syria</label></li>
                <li><input type="checkbox" id="lebanon" value="Lebanon"> <label for="lebanon">Lebanon</label></li>
                <li><input type="checkbox" id="yemen" value="Yemen"> <label for="yemen">Yemen</label></li>
                <li><input type="checkbox" id="libya" value="Libya"> <label for="libya">Libya</label></li>
                <li><input type="checkbox" id="sudan" value="Sudan"> <label for="sudan">Sudan</label></li>
                <li><input type="checkbox" id="morocco" value="Morocco"> <label for="morocco">Morocco</label></li>
                <li><input type="checkbox" id="tunisia" value="Tunisia"> <label for="tunisia">Tunisia</label></li>
                <li><input type="checkbox" id="algeria" value="Algeria"> <label for="algeria">Algeria</label></li>
                <li><input type="checkbox" id="Palestine" value="Palestine"> <label for="Palestine">Palestine</label></li>
                <li><input type="checkbox" id="Mauritania" value="Mauritania"> <label for="Mauritania">Mauritania</label></li>
            </ul>
            <h3 id="filterCar">Filter Car</h3>
            <ul class="car-brand-list" id="kjørr">
                <li><input type="checkbox" id="toyota" value="Toyota"> <label for="toyota">Toyota</label></li>
                <li><input type="checkbox" id="ford" value="Ford"> <label for="ford">Ford</label></li>
                <li><input type="checkbox" id="volkswagen" value="Volkswagen"> <label for="volkswagen">Volkswagen</label></li>
                <li><input type="checkbox" id="bmw" value="BMW"> <label for="bmw">BMW</label></li>
                <li><input type="checkbox" id="mercedes" value="Mercedes-Benz"> <label for="mercedes">Mercedes-Benz</label></li>
                <li><input type="checkbox" id="audi" value="Audi"> <label for="audi">Audi</label></li>
                <li><input type="checkbox" id="chevrolet" value="Chevrolet"> <label for="chevrolet">Chevrolet</label></li>
                <li><input type="checkbox" id="honda" value="Honda"> <label for="honda">Honda</label></li>
                <li><input type="checkbox" id="hyundai" value="Hyundai"> <label for="hyundai">Hyundai</label></li>
                <li><input type="checkbox" id="nissan" value="Nissan"> <label for="nissan">Nissan</label></li>
                <li><input type="checkbox" id="tesla" value="Tesla"> <label for="tesla">Tesla</label></li>
                <li><input type="checkbox" id="jeep" value="Jeep"> <label for="jeep">Jeep</label></li>
                <li><input type="checkbox" id="mazda" value="Mazda"> <label for="mazda">Mazda</label></li>
                <li><input type="checkbox" id="kia" value="Kia"> <label for="kia">Kia</label></li>
                <li><input type="checkbox" id="subaru" value="Subaru"> <label for="subaru">Subaru</label></li>
                <li><input type="checkbox" id="lexus" value="Lexus"> <label for="lexus">Lexus</label></li>
                <li><input type="checkbox" id="volvo" value="Volvo"> <label for="volvo">Volvo</label></li>
                <li><input type="checkbox" id="jaguar" value="Jaguar"> <label for="jaguar">Jaguar</label></li>
                <li><input type="checkbox" id="porsche" value="Porsche"> <label for="porsche">Porsche</label></li>
                <li><input type="checkbox" id="landrover" value="Land Rover"> <label for="landrover">Land Rover</label></li>
                <li><input type="checkbox" id="mitsubishi" value="Mitsubishi"> <label for="mitsubishi">Mitsubishi</label></li>
                <li><input type="checkbox" id="fiat" value="Fiat"> <label for="fiat">Fiat</label></li>
                <li><input type="checkbox" id="peugeot" value="Peugeot"> <label for="peugeot">Peugeot</label></li>
                <li><input type="checkbox" id="renault" value="Renault"> <label for="renault">Renault</label></li>
                <li><input type="checkbox" id="citroen" value="Citroën"> <label for="citroen">Citroën</label></li>
                <li><input type="checkbox" id="skoda" value="Škoda"> <label for="skoda">Škoda</label></li>
                <li><input type="checkbox" id="infiniti" value="Infiniti"> <label for="infiniti">Infiniti</label></li>
                <li><input type="checkbox" id="acura" value="Acura"> <label for="acura">Acura</label></li>
                <li><input type="checkbox" id="alfa-romeo" value="Alfa Romeo"> <label for="alfa-romeo">Alfa Romeo</label></li>
                <li><input type="checkbox" id="aston-martin" value="Aston Martin"> <label for="aston-martin">Aston Martin</label></li>
                <li><input type="checkbox" id="bentley" value="Bentley"> <label for="bentley">Bentley</label></li>
                <li><input type="checkbox" id="bugatti" value="Bugatti"> <label for="bugatti">Bugatti</label></li>
                <li><input type="checkbox" id="cadillac" value="Cadillac"> <label for="cadillac">Cadillac</label></li>
                <li><input type="checkbox" id="chrysler" value="Chrysler"> <label for="chrysler">Chrysler</label></li>
                <li><input type="checkbox" id="dodge" value="Dodge"> <label for="dodge">Dodge</label></li>
                <li><input type="checkbox" id="ferrari" value="Ferrari"> <label for="ferrari">Ferrari</label></li>
                <li><input type="checkbox" id="gmc" value="GMC"> <label for="gmc">GMC</label></li>
                <li><input type="checkbox" id="hummer" value="Hummer"> <label for="hummer">Hummer</label></li>
                <li><input type="checkbox" id="lamborghini" value="Lamborghini"> <label for="lamborghini">Lamborghini</label></li>
                <li><input type="checkbox" id="lincoln" value="Lincoln"> <label for="lincoln">Lincoln</label></li>
                <li><input type="checkbox" id="maserati" value="Maserati"> <label for="maserati">Maserati</label></li>
                <li><input type="checkbox" id="mcLaren" value="McLaren"> <label for="mcLaren">McLaren</label></li>
                <li><input type="checkbox" id="mini" value="Mini"> <label for="mini">Mini</label></li>
                <li><input type="checkbox" id="rolls-royce" value="Rolls-Royce"> <label for="rolls-royce">Rolls-Royce</label></li>
                <li><input type="checkbox" id="saab" value="Saab"> <label for="saab">Saab</label></li>
                <li><input type="checkbox" id="scion" value="Scion"> <label for="scion">Scion</label></li>
                <li><input type="checkbox" id="seat" value="SEAT"> <label for="seat">SEAT</label></li>
                <li><input type="checkbox" id="smart" value="Smart"> <label for="smart">Smart</label></li>
                <li><input type="checkbox" id="suzuki" value="Suzuki"> <label for="suzuki">Suzuki</label></li>
                <li><input type="checkbox" id="tata" value="Tata"> <label for="tata">Tata</label></li>
                <li><input type="checkbox" id="pagani" value="Pagani"> <label for="pagani">Pagani</label></li>
                <li><input type="checkbox" id="koenigsegg" value="Koenigsegg"> <label for="koenigsegg">Koenigsegg</label></li>
                <li><input type="checkbox" id="genesis" value="Genesis"> <label for="genesis">Genesis</label></li>
                <li><input type="checkbox" id="mg" value="MG"> <label for="mg">MG</label></li>
                <li><input type="checkbox" id="opel" value="Opel"> <label for="opel">Opel</label></li>
                <li><input type="checkbox" id="daewoo" value="Daewoo"> <label for="daewoo">Daewoo</label></li>
                <li><input type="checkbox" id="isuzu" value="Isuzu"> <label for="isuzu">Isuzu</label></li>
                <li><input type="checkbox" id="geely" value="Geely"> <label for="geely">Geely</label></li>
                <li><input type="checkbox" id="proton" value="Proton"> <label for="proton">Proton</label></li>
                <li><input type="checkbox" id="perodua" value="Perodua"> <label for="perodua">Perodua</label></li>
                <li><input type="checkbox" id="chery" value="Chery"> <label for="chery">Chery</label></li>
                <li><input type="checkbox" id="byd" value="BYD"> <label for="byd">BYD</label></li>
                <li><input type="checkbox" id="great-wall" value="Great Wall"> <label for="great-wall">Great Wall</label></li>
                <li><input type="checkbox" id="mahindra" value="Mahindra"> <label for="mahindra">Mahindra</label></li>
                <li><input type="checkbox" id="ssangyong" value="SsangYong"> <label for="ssangyong">SsangYong</label></li>
                <li><input type="checkbox" id="lucid" value="Lucid"> <label for="lucid">Lucid</label></li>
                <li><input type="checkbox" id="rivian" value="Rivian"> <label for="rivian">Rivian</label></li>
            </ul>
        </div>

        <div class="productsContainer" id="productsContainer">
            <p>Loading products...</p>
        </div>
    </div>

    <script>
        (function () {
    console.log("Initializing TorgetKat page...");

    function fetchProducts(priceOrder = 'asc', selectedCountries = [], dateOrder = 'desc', subCategory = '', selectedCarBrands = []) {
        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category') || 'default';

        let apiUrl = `/api/products?category=${category}`;
        if (subCategory) apiUrl += `&subCategory=${subCategory}`;
        if (priceOrder) apiUrl += `&sortPrice=${priceOrder}`;
        if (dateOrder) apiUrl += `&sortDate=${dateOrder}`;
        if (selectedCountries.length) apiUrl += `&countries=${selectedCountries.join(',')}`;
        if (selectedCarBrands.length) apiUrl += `&carBrand=${selectedCarBrands.join(',')}`;

        console.log("Fetching products from:", apiUrl);

        fetch(apiUrl)
            .then(response => {
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                return response.json();
            })
            .then(products => {
                console.log("Fetched products:", products);
                displayProducts(products);
            })
            .catch(error => {
                console.error("Error fetching products:", error);
                const container = document.getElementById('productsContainer');
                if (container) {
                    container.innerHTML = `<p class="no-products">Error loading products: ${error.message}</p>`;
                } else {
                    console.error("productsContainer element not found!");
                }
            });
    }

    function displayProducts(products) {
        const container = document.getElementById('productsContainer');
        if (!container) {
            console.error("productsContainer element not found!");
            return;
        }

        container.innerHTML = '';

        if (products.length === 0) {
            container.innerHTML = '<p class="no-products">No products found for this category.</p>';
            return;
        }

        products.forEach(product => {
            const productDiv = document.createElement('div');
            productDiv.className = 'product';

            const images = product.Images ? product.Images.split(',') : [];
            const firstImage = images.length > 0 ? `/uploads/${images[0].trim()}` : '/uploads/default-placeholder.png';

            productDiv.innerHTML = `
                <img src="${firstImage}" alt="${product.ProductName}">
                <i class="fas fa-heart favorite-icon" data-product-id="${product.ProductdID}"></i>
                <div>
                    <h3>
                        ${product.ProductName} 
                        ${product.Sold ? `<span class="sold-label">(Sold)</span>` : ''}
                    </h3>
                    <p><strong>Price:</strong> ${product.Price} $</p>
                    <p><strong>Location:</strong> ${product.Location}</p>
                </div>
            `;

           productDiv.addEventListener('click', () => {
            const favoriteIcon = productDiv.querySelector('.favorite-icon');
            const isFavorited = favoriteIcon.classList.contains('favorited'); // Check if the product is favorited
            window.location.href = `/productDetails?productdID=${product.ProductdID}&favorited=${isFavorited}`;
        });

            container.appendChild(productDiv);
        });

        initializeFavorites();

        document.querySelectorAll('.favorite-icon').forEach(icon => {
            icon.addEventListener('click', (e) => {
                e.stopPropagation();
                const productdID = icon.getAttribute('data-product-id');
                const isFavorited = icon.classList.contains('favorited');

                if (isFavorited) {
                    fetch('/api/unfavorite', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productdID }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        icon.classList.remove('favorited');
                        icon.style.color = '#ccc';
                    })
                    .catch(error => console.error("Error unfavoriting product:", error));
                } else {
                    fetch('/api/favorite', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productdID }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        icon.classList.add('favorited');
                        icon.style.color = '#ff4757';
                    })
                    .catch(error => console.error("Error favoriting product:", error));
                }
            });
        });

        
    }

    let favoritesInitialized = false; // Track if favorites have been initialized

    function initializeFavorites() {
    fetch('/api/favorites')
        .then(response => response.json())
        .then(favorites => {

            // Loop through all favorite icons and update their state
            document.querySelectorAll('.favorite-icon').forEach(icon => {
                const productdID = icon.getAttribute('data-product-id');
                const isFavorited = favorites.some(product => product.ProductdID === Number(productdID));

                if (isFavorited) {
                    icon.classList.add('favorited');
                    icon.style.color = '#ff4757'; // Red color for favorited products
                } else {
                    icon.classList.remove('favorited');
                    icon.style.color = '#ccc'; // Default color for non-favorited products
                }
            });
        })
        .catch(error => console.error("Error checking favorites:", error));
}

    function applyFilters() {
        console.log("Applying filters...");

        const selectedCarBrands = Array.from(document.querySelectorAll('.car-brand-list input[type="checkbox"]:checked'))
            .map(checkbox => checkbox.value);
        const priceOrder = document.getElementById('priceFilter').value;
        const dateOrder = document.getElementById('dateFilter').value;
        const subCategory = document.getElementById('subCategoryFilter')?.value || '';
        const selectedCountries = Array.from(document.querySelectorAll('.country-list input[type="checkbox"]:checked'))
            .map(checkbox => checkbox.value);

        console.log("Selected filters:", { priceOrder, selectedCountries, dateOrder, subCategory, selectedCarBrands });

        fetchProducts(priceOrder, selectedCountries, dateOrder, subCategory, selectedCarBrands);
    }

    const priceFilter = document.getElementById('priceFilter');
    const dateFilter = document.getElementById('dateFilter');
    const subCategoryFilter = document.getElementById('subCategoryFilter');

    if (priceFilter && dateFilter && subCategoryFilter) {
        priceFilter.addEventListener('change', applyFilters);
        dateFilter.addEventListener('change', applyFilters);
        subCategoryFilter.addEventListener('change', applyFilters);
    } else {
        console.error("One or more filter elements not found!");
    }

    document.querySelectorAll('.country-list input[type="checkbox"]').forEach(checkbox => {
        checkbox.addEventListener('change', applyFilters);
    });

    document.querySelectorAll('.car-brand-list input[type="checkbox"]').forEach(checkbox => {
        checkbox.addEventListener('change', applyFilters);
    });

    window.onload = function () {
        console.log("Page loaded. Initializing...");

        checkUnreadMessages();

        const urlParams = new URLSearchParams(window.location.search);
        const category = urlParams.get('category') || 'default';
        const subcategoryFilterContainer = document.getElementById('subcategoryFilterContainer');

        if (category === 'Torget') {
            if (subcategoryFilterContainer) {
                subcategoryFilterContainer.style.display = 'block';
            } else {
                console.error("subcategoryFilterContainer element not found!");
            }
        } else {
            if (subcategoryFilterContainer) {
                subcategoryFilterContainer.style.display = 'none';
            }
        }

        const carBrandDropdown = document.getElementById('kjørr');
        const carBrandLabel = document.getElementById('filterCar');

        if (category === 'Bil') {
            if (carBrandDropdown && carBrandLabel) {
                carBrandDropdown.style.display = 'block';
                carBrandLabel.style.display = 'block';
            } else {
                console.error("carBrandDropdown or carBrandLabel element not found!");
            }
        } else {
            if (carBrandDropdown && carBrandLabel) {
                carBrandDropdown.style.display = 'none';
                carBrandLabel.style.display = 'none';
            }
        }

        applyFilters();
    };
})();
    </script>
</body>
</html>