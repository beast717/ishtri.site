<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="icon" href="logo.png" type="image/png">

    <script src="https://unpkg.com/i18next/dist/umd/i18next.min.js"></script>
    <script src="https://unpkg.com/i18next-http-backend/i18nextHttpBackend.min.js"></script>
    <script src="https://unpkg.com/i18next-browser-languagedetector/i18nextBrowserLanguageDetector.min.js"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mine Annonser</title>
    <style>


        .productsContainer {
            margin-top: -27px;
            padding: 20px;
            flex: 1;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* Responsive grid */
        }

        .product {
            font-family: Arial, Helvetica, sans-serifx;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            margin: 10px 0;
            background-color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .product:hover {
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        .product img {
            max-width: 300px;
            height: auto;
            border-radius: 5px;
        }

        .product h3 {
            margin: 0;
        }


        /* General Button Styles */
/* Button Styles (same as before) */
button {
    padding: 10px 15px;
    font-size: 14px;
    font-weight: bold;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

/* Delete Button */
.delete-button {
    background-color: #ff4d4d; /* Bright red */
    color: white;
}

.delete-button:hover {
    background-color: #e60000; /* Darker red on hover */
    transform: scale(1.05);
}

.delete-button:active {
    background-color: #cc0000; /* Even darker red when clicked */
}

/* Mark as Sold Button */
.sold-button {
    background-color: #4caf50; /* Green */
    color: white;
}

.sold-button:hover {
    background-color: #388e3c; /* Darker green on hover */
    transform: scale(1.05);
}

.sold-button:active {
    background-color: #2e7d32; /* Even darker green when clicked */
}

/* Mark as Unsold Button */
.unsold-button {
    background-color: #ff9800; /* Orange */
    color: white;
}

.unsold-button:hover {
    background-color: #f57c00; /* Darker orange on hover */
    transform: scale(1.05);
}

.unsold-button:active {
    background-color: #ef6c00; /* Even darker orange when clicked */
}

/* Accessibility */
button:focus {
    outline: 2px solid #000;
    outline-offset: 2px;
}

button:disabled {
    background-color: #ccc; /* Disabled state */
    color: #777;
    cursor: not-allowed;
}

/* Flexbox Container for Buttons */
.button-container {
    display: flex;
    gap: 10px; /* Space between buttons */
    margin-top: 10px;
}

.button-container button {
    flex: 1; /* Equal button width */
}

/* Highlight Sold Label */
.sold-label {
    color: #ffffff;
    background-color: #ff5722; /* Highlight color (e.g., orange) */
    padding: 3px 6px;
    border-radius: 4px;
    font-size: 14px;
    font-weight: bold;
    margin-left: 5px;
    display: inline-block;
}

    



        h1{
            font-family: Arial, Helvetica, sans-serif;
        }

    </style>
</head>
<body>
     <%- include('partials/navbar') %>

    <h1 data-i18n="navbar.mine_annonser">Mine Annonser</h1>
    <div id="productsContainer">
        <p>Loading your products...</p>
    </div>

    <script>
        // Fetch user's products
        fetch('/api/user-products')
            .then(response => response.json())
            .then(products => {
                const container = document.getElementById('productsContainer');
                container.innerHTML = ''; // Clear loading message

                if (products.length === 0) {
                    container.innerHTML = '<p>You have not uploaded any products.</p>';
                    return;
                }

                products.forEach(product => {
                    const productDiv = document.createElement('div');
                    productDiv.className = 'product';

                    productDiv.innerHTML = `
                        <img src="/uploads/${product.Images.split(',')[0]}" alt="${product.ProductName}">
                        <div>
                            <h3>
                                ${product.ProductName} 
                                ${product.Sold ? `<span class="sold-label">(Sold)</span>` : ''}
                            </h3>
                            <p><strong data-i18n="product_details.price">Pris:</strong> ${product.Price} $</p>
                            <p><strong data-i18n="product_details.location">Sted:</strong> ${product.Location}</p>
                            <p><strong data-i18n="product_details.dato">Dato:</strong> ${product.Date}</p>
                            <div class="button-container">
                            <button class="delete-button" data-id="${product.ProductdID}" data-i18n="product_details.slett">Slett</button>
                            ${product.Sold 
                                ? `<button class="unsold-button" data-id="${product.ProductdID}" data-i18n="product_details.mark_unsold">Mark as Unsold</button>`
                                : `<button class="sold-button" data-id="${product.ProductdID}"data-i18n="product_details.mark_sold" >Mark as Sold</button>`
                            }
                            </div>
                        </div>
                    `;

                    // Add click event to redirect to product details page
                    productDiv.addEventListener('click', () => {
                        window.location.href = `/productDetails?productdID=${product.ProductdID}`;
                    });

                    container.appendChild(productDiv);
                });



                // Attach "Mark as Sold" event listeners
document.querySelectorAll('.sold-button').forEach(button => {
    button.addEventListener('click', (event) => {
        event.stopPropagation(); // Prevent the click from propagating to the parent div and redirecting
        const ProductdID = button.getAttribute('data-id');
        if (confirm('Are you sure you want to mark this product as sold?')) {
            fetch(`/api/mark-as-sold/${ProductdID}`, { method: 'PUT' })
                .then(response => response.json())
                .then(result => {
                    alert(result.message || 'Product marked as sold.');
                    location.reload(); // Reload the page to show the updated status
                })
                .catch(error => {
                    console.error('Error marking product as sold:', error);
                    alert('Failed to mark the product as sold.');
                });
        }
    });
});


                
               // Attach "Mark as Unsold" event listeners
document.querySelectorAll('.unsold-button').forEach(button => {
    button.addEventListener('click', (event) => {
        event.stopPropagation(); // Prevent the click from propagating to the parent div and redirecting
        const ProductdID = button.getAttribute('data-id');
        if (confirm('Are you sure you want to mark this product as unsold?')) {
            fetch(`/api/mark-as-unsold/${ProductdID}`, { method: 'PUT' })
                .then(response => response.json())
                .then(result => {
                    alert(result.message || 'Product marked as unsold.');
                    location.reload(); // Reload the page to show the updated status
                })
                .catch(error => {
                    console.error('Error marking product as unsold:', error);
                    alert('Failed to mark the product as unsold.');
                });
        }
    });
});

                // Attach delete event listeners
                document.querySelectorAll('.delete-button').forEach(button => {
                    button.addEventListener('click', () => {
                        event.stopPropagation(); // Prevent parent event handlers
                        const ProductdID = button.getAttribute('data-id');
                        if (confirm('Are you sure you want to delete this product?')) {
                            fetch(`/api/delete-product/${ProductdID}`, { method: 'DELETE' })
                                .then(response => response.json())
                                .then(result => {
                                    alert(result.message || 'Product deleted.');
                                    button.closest('.product').remove();
                                })
                                .catch(error => {
                                    console.error('Error deleting product:', error);
                                    alert('Failed to delete the product.');
                                });
                        }
                    });
                });
            })


            .catch(error => {
                console.error('Error fetching products:', error);
                const container = document.getElementById('productsContainer');
                container.innerHTML = `<p>Error loading your products: ${error.message}</p>`;
            });


    </script>
</body>
</html>
