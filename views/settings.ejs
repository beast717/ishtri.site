<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="icon" href="/ishtri1.png" sizes="16x16 32x32" type="image/png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="/js/toast.js" defer></script>
    <style>
        body { background-color: #f8f9fa; }
        .settings-container {
            max-width: 600px;
            margin: 2rem auto;
            padding: 2rem;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        .settings-container h1 {
            text-align: center;
            margin-bottom: 1.5rem;
            color: #333;
        }
        .setting-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid #eee;
        }
         .setting-item:last-child {
             border-bottom: none;
         }
        .setting-label {
            font-size: 1.1em;
            color: #555;
        }
        /* Basic Toggle Switch CSS */
        .switch {
            position: relative;
            display: inline-block;
            width: 50px; /* Width of switch */
            height: 24px; /* Height of switch */
        }
        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 24px; /* Make it rounded */
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 18px; /* Size of the knob */
            width: 18px;
            left: 3px; /* Initial position */
            bottom: 3px;
            background-color: white;
            transition: .4s;
            border-radius: 50%; /* Make knob circular */
        }
        input:checked + .slider {
            background-color: #28a745; /* Green when checked */
        }
        input:checked + .slider:before {
            transform: translateX(26px); /* Move knob to the right */
        }
        #saveStatus {
            margin-top: 1rem;
            text-align: center;
            font-size: 0.9em;
            color: #777;
            height: 1.2em; /* Reserve space */
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>

    <div class="settings-container">
        <h1>Settings</h1>

        <div class="setting-item">
            <label for="emailNotifications" class="setting-label">
                Receive email for saved search matches
            </label>
            <label class="switch">
                <input type="checkbox" id="emailNotifications">
                <span class="slider"></span>
            </label>
        </div>

        <!-- Add more settings here if needed -->

        <div id="saveStatus"></div> <!-- For saving feedback -->

    </div>

    <script src="/shared.js"></script> <!-- Include shared JS -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const emailToggle = document.getElementById('emailNotifications');
            const saveStatus = document.getElementById('saveStatus');

            // 1. Fetch initial setting state
            fetch('/api/settings/email-preference', { credentials: 'include' })
                .then(res => {
                    if (!res.ok) throw new Error('Could not load preference');
                    return res.json();
                })
                .then(data => {
                    emailToggle.checked = data.enabled;
                })
                .catch(error => {
                    console.error('Error fetching setting:', error);
                    saveStatus.textContent = 'Error loading setting.';
                    emailToggle.disabled = true; // Disable if loading failed
                });

            // 2. Add event listener for changes
            emailToggle.addEventListener('change', async () => {
                const isEnabled = emailToggle.checked;
                saveStatus.textContent = 'Saving...';
                emailToggle.disabled = true; // Disable during save

                try {
                    const response = await fetch('/api/settings/email-preference', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'include',
                        body: JSON.stringify({ enabled: isEnabled })
                    });

                    if (!response.ok) {
                         const errorData = await response.json().catch(() => ({})); // Try getting error message
                         throw new Error(errorData.message || `Failed to save preference (${response.status})`);
                    }

                    const result = await response.json();
                    saveStatus.textContent = 'Saved!';
                    window.toast?.show('Settings saved successfully.', 'success'); // Optional toast
                    setTimeout(() => saveStatus.textContent = '', 2000); // Clear status after 2s

                } catch (error) {
                    console.error('Error saving setting:', error);
                    saveStatus.textContent = `Error: ${error.message}`;
                     window.toast?.show(`Error saving: ${error.message}`, 'error');
                    // Optionally revert the toggle on error?
                    // emailToggle.checked = !isEnabled;
                } finally {
                    emailToggle.disabled = false; // Re-enable toggle
                }
            });
        });
    </script>
</body>
</html>