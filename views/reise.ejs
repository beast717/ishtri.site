<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="icon" href="ishtri1.png" sizes="16x16 32x32" type="image/png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title data-i18n="flight_search.title">Flight Search</title>
    <style>

        .form-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh; /* Full viewport height */
            padding: 20px; /* Add some padding for smaller screens */
        }

        

        .flight-search-form {
            max-width: 500px;
            width: 100%;
            background: #fff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .flight-search-form h2 {
            text-align: center;
            margin-bottom: 20px;
            font-size: 24px;
            color: #333;
        }

        .suggestions-list {
            list-style: none;
            padding: 0;
            margin: 0;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ddd;
            background-color: #fff;
            position: absolute;
            width: calc(100% - 24px);
            z-index: 10;
            border-radius: 6px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            display: none;
        }

        .suggestions-list li {
            padding: 10px;
            cursor: pointer;
            font-size: 14px;
            color: #333;
            transition: background-color 0.3s;
        }

        .suggestions-list li:hover {
            background-color: #f1f1f1;
        }

        @media (max-width: 600px) {
            .flight-search-form {
                padding: 20px;
            }
        }
    </style>
</head>

<body>
    <script src="/shared.js"></script>
    <%- include('partials/navbar') %>
     <div class="form-container">
    <div class="flight-search-form">
        <h2 data-i18n="flight_search.title">Flight Search</h2>
        <form id="flightSearchForm">
            <!-- Trip Type -->
            <div class="form-group">
                <label for="tripType">
                    <span data-i18n="flight_search.trip_type">Trip Type:</span>
                </label>
                <select id="tripType">
                    <option value="oneway" data-i18n="flight_search.one_way">One Way</option>
                    <option value="roundtrip" data-i18n="flight_search.round_trip">Round Trip</option>
                </select>
            </div>

            <div class="form-group">
                <label for="departure" data-i18n="flight_search.from">From</label>
                <input type="text" id="departure" data-i18n="[placeholder]flight_search.enter_city" placeholder="Enter cities/airports..." autocomplete="off" required>
                <ul id="departure-suggestions" class="suggestions-list"></ul>
            </div>
            <div class="form-group">
                <label for="arrival" data-i18n="flight_search.to">To</label>
                <input type="text" id="arrival" data-i18n="[placeholder]flight_search.enter_city" placeholder="Enter cities/airports..." autocomplete="off" required>
                <ul id="arrival-suggestions" class="suggestions-list"></ul>
            </div>
            <div class="form-group">
                <label for="departureDate" data-i18n="flight_search.departure_date">Departure Date</label>
                <input type="date" id="departureDate" required>
            </div>
            <div class="form-group" id="returnDateGroup" style="display: none;">
                <label for="returnDate" data-i18n="flight_search.return_date">Return Date</label>
                <input type="date" id="returnDate">
            </div>
            <div class="form-group">
                <label for="passengers" data-i18n="flight_search.passengers">Number of Passengers</label>
                <select id="passengers">
                    <option value="1" data-i18n="flight_search.passenger_count.one">1 Passenger</option>
                    <option value="2" data-i18n="flight_search.passenger_count.two">2 Passengers</option>
                    <option value="3" data-i18n="flight_search.passenger_count.three">3 Passengers</option>
                    <option value="4" data-i18n="flight_search.passenger_count.four">4 Passengers</option>
                </select>
            </div>
            <div class="form-group">
                <button type="submit" data-i18n="flight_search.search">Search Flights</button>
            </div>
        </form>
    </div>
      </div>

    <script>
        let airports = [];
        let departureIataCode = '';
        let arrivalIataCode = '';

        // Load airports data from JSON file
        function loadAirports() {
            fetch('/data/airports.json')
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    airports = data;
                    console.log('Loaded Airports Data:', airports);
                })
                .catch(error => {
                    console.error('Error loading airports:', error);
                });
        }

        // Filter airports based on user input
        function filterAirports(input, isDeparture) {
            const searchTerm = input.toLowerCase();
            console.log('Search Term:', searchTerm);

            const filteredAirports = airports.filter(airport => {
                const name = airport.name.toLowerCase();
                const city = airport.city.toLowerCase();
                return name.includes(searchTerm) || city.includes(searchTerm);
            });

            console.log('Filtered Airports:', filteredAirports);
            displaySuggestions(filteredAirports, isDeparture);
        }

        // Display filtered suggestions in the dropdown
        function displaySuggestions(filteredAirports, isDeparture) {
            const suggestionsList = isDeparture
                ? document.getElementById('departure-suggestions')
                : document.getElementById('arrival-suggestions');
            suggestionsList.innerHTML = '';

            if (filteredAirports.length > 0) {
                filteredAirports.forEach(airport => {
                    const suggestionItem = document.createElement('li');
                    suggestionItem.textContent = `${airport.name} (${airport.iata}) - ${airport.city}`;
                    suggestionItem.onclick = () => {
                        selectAirport(airport, isDeparture);
                    };
                    suggestionsList.appendChild(suggestionItem);
                });
                suggestionsList.style.display = 'block';
            } else {
                suggestionsList.style.display = 'none';
            }
        }

        // Select an airport from the suggestions
        function selectAirport(airport, isDeparture) {
            const input = isDeparture ? document.getElementById('departure') : document.getElementById('arrival');
            const iataCode = airport.iata;

            input.value = `${airport.name} (${iataCode}) - ${airport.city}`;
            const suggestionsList = isDeparture
                ? document.getElementById('departure-suggestions')
                : document.getElementById('arrival-suggestions');
            suggestionsList.innerHTML = '';
            suggestionsList.style.display = 'none';

            if (isDeparture) {
                departureIataCode = iataCode;
            } else {
                arrivalIataCode = iataCode;
            }
        }

        // Handle form submission
        document.getElementById('flightSearchForm').addEventListener('submit', (e) => {
            e.preventDefault();

            const tripType = document.getElementById('tripType').value;
            const departureDate = document.getElementById('departureDate').value.replace(/-/g, '');
            const returnDate = tripType === 'roundtrip' ? document.getElementById('returnDate').value.replace(/-/g, '') : '';
            const passengers = document.getElementById('passengers').value;

            let skyscannerUrl = `https://www.skyscanner.com/transport/flights/${departureIataCode}/${arrivalIataCode}/${departureDate}/`;

            if (tripType === 'roundtrip' && returnDate) {
                skyscannerUrl += `${returnDate}/`;
            }

            skyscannerUrl += `?adults=${passengers}`;
            console.log('Redirecting to:', skyscannerUrl);
            window.open(skyscannerUrl, '_blank');
        });

        // Handle trip type toggle
        document.getElementById('tripType').addEventListener('change', (e) => {
            const returnDateGroup = document.getElementById('returnDateGroup');
            returnDateGroup.style.display = e.target.value === 'roundtrip' ? 'block' : 'none';
        });

        // Attach input event listeners
        document.getElementById('departure').addEventListener('input', (e) => {
            filterAirports(e.target.value, true);
        });

        document.getElementById('arrival').addEventListener('input', (e) => {
            filterAirports(e.target.value, false);
        });

        // Search page logic (e.g., airport loading or other functions)
        window.addEventListener('load', () => {
            loadAirports(); // Example: Load airports for autocomplete
            console.log("Search page logic executed.");
        });
    </script>
</body>
</html>