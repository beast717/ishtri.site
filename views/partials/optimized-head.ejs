<!-- Optimized Head Section for Layout Shift Prevention -->

<!-- Preload critical fonts with fallback strategy -->
<link rel="preconnect" href="https://fonts.googleapis.com" crossorigin>
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<!-- Simplified font loading to avoid parsing errors -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" media="print" onload="this.media='all'; this.onload=null;" onerror="this.remove();">
<noscript><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"></noscript>

<!-- Preload Font Awesome icons -->
<link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'" crossorigin="anonymous">
<noscript><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" crossorigin="anonymous"></noscript>

<!-- Critical CSS inline to prevent FOUC and layout shifts -->
<style>
    /* Critical CSS to prevent FOUC and layout shifts */
    html { 
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; 
        font-display: swap;
    }
    body { 
        margin: 0; 
        padding: 0; 
        min-height: 100vh; 
        line-height: 1.6;
        font-size: 16px;
        background-color: #f8f9fa;
        color: #333;
        font-family: Inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    }
    
    /* Prevent layout shifts for key components */
    main { min-height: 70vh; contain: layout; }
    .navbar { height: 80px; contain: layout; }
    @media (max-width: 768px) { .navbar { height: 60px; } }
    
    /* Grid and layout containers */
    .product-grid { 
        display: grid; 
        gap: 20px; 
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        contain: layout;
    }
    .product { 
        min-height: 176px; 
        contain: layout style;
        background-color: #ffffff;
        border: 1px solid #e9ecef;
        border-radius: 6px;
    }
    
    /* Image containers with aspect ratios */
    .product-image-container {
        aspect-ratio: 9/7;
        position: relative;
        overflow: hidden;
        border-radius: 6px;
        background-color: #f0f0f0;
    }
    
    /* Loading states */
    .content-loading { 
        min-height: 200px; 
        position: relative; 
        contain: layout;
    }
    .skeleton { 
        border-radius: 6px; 
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }
    @keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
    }
    
    /* Prevent image layout shifts */
    img { 
        max-width: 100%; 
        height: auto; 
        display: block;
    }
    .lazy-image { 
        transition: opacity 0.3s ease; 
        opacity: 0;
    }
    .lazy-image.loaded { 
        opacity: 1; 
    }
    
    /* Text and typography */
    h1, h2, h3, h4, h5, h6 { 
        line-height: 1.3; 
        margin: 0.8em 0; 
        color: #2d3436;
        font-weight: 600;
    }
    p { 
        line-height: 1.6; 
        margin: 0 0 1em 0; 
    }
    
    /* Form elements */
    input, textarea, select, button {
        font-family: inherit;
        font-size: inherit;
        line-height: 1.4;
    }
    
    /* Responsive containers */
    .container { 
        max-width: 1200px; 
        margin: 0 auto; 
        padding: 0 20px; 
        contain: layout;
    }
    
    /* Mobile optimizations */
    @media (max-width: 768px) {
        body { font-size: 14px; }
        .product-grid { 
            grid-template-columns: 1fr;
            gap: 15px; 
        }
        .product-image-container { aspect-ratio: 16/9; }
        .container { padding: 0 15px; }
    }
    
    /* Prevent flashes during font loading */
    .fonts-loading { visibility: visible; }
    .fonts-loaded { 
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
    }
    .fonts-failed { 
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
    }
    
    /* Dark mode support (prevents shifts in theme switching) */
    @media (prefers-color-scheme: dark) {
        body { 
            background-color: #1a1a1a; 
            color: #e0e0e0; 
        }
        .product { 
            background-color: #2d2d2d; 
            border-color: #444; 
        }
    }
</style>

<!-- Layout shift prevention scripts (inline for immediate execution) -->
<script>
    // Prevent FOUC and layout shifts
    document.documentElement.classList.add('fonts-loading');
    
    // Font loading detection
    if ('fonts' in document) {
        document.fonts.ready.then(function() {
            document.documentElement.classList.remove('fonts-loading');
            document.documentElement.classList.add('fonts-loaded');
        }).catch(function() {
            document.documentElement.classList.remove('fonts-loading');
            document.documentElement.classList.add('fonts-failed');
        });
    } else {
        // Fallback for older browsers
        setTimeout(function() {
            document.documentElement.classList.remove('fonts-loading');
            document.documentElement.classList.add('fonts-loaded');
        }, 100);
    }
    
    // Viewport height fix for mobile browsers
    function setVH() {
        const vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', vh + 'px');
    }
    setVH();
    window.addEventListener('resize', setVH);
    
    // Preload critical resources
    if (window.requestIdleCallback) {
        requestIdleCallback(function() {
            // Preload common images
            const criticalImages = ['/images/default.svg', '/ishtri1.png'];
            criticalImages.forEach(function(src) {
                const img = new Image();
                img.src = src;
            });
        });
    }
</script>